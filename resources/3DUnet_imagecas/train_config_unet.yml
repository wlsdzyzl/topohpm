# Sample configuration file for training a 3D U-Net on a task of predicting the boundaries in 3D stack of the Arabidopsis
# ovules acquired with the confocal microscope. Training done with a combination of Binary Cross-Entropy and DiceLoss.
# Download train data from: https://osf.io/x9yns/
# Download validation data from: https://osf.io/xp5uf/
# Download test data from: https://osf.io/8jz7e/
# Pretrain a 3D Unet
model:
  name: UNet3D
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 1
  # determines the order of operators in a single layer (crg - Conv3d+ReLU+GroupNorm)
  layer_order: gcr
  # initial number of feature maps
  f_maps: 32
  # number of f_map levels
  num_levels: 3
  # number of groups in the groupnorm
  num_groups: 8
  # apply element-wise nn.Sigmoid after the final 1x1x1 convolution, otherwise apply nn.Softmax
  final_sigmoid: true
  is_segmentation: true
  

  # num_skeletal_points: 100
  # num_samples: 10
# loss function to be used during training
loss:
  name: BCEDiceLoss
  alpha: 1
  beta: 1
  # a target value that is ignored and does not contribute to the input gradient
  ignore_index: null
  # skip the last channel in the target (i.e. when last channel contains data not relevant for the loss)
  skip_last_target: false
# loss:
#   name: BCEDCLDiceLoss
#   alpha: 1
#   beta: 0.6
#   gamma: 0.4
#   # a target value that is ignored and does not contribute to the input gradient
#   ignore_index: null
#   # skip the last channel in the target (i.e. when last channel contains data not relevant for the loss)
#   skip_last_target: false
regularizer:
  name: none
# without ssim
# ssim:
#   window_size: 6
optimizer:
  # initial learning rate
  learning_rate: 0.1
  # weight decay
  weight_decay: 0.00001
# evaluation metric
eval_metric:
  # use AdaptedRandError metric
  name: MeanIoU
  # probability maps threshold
  threshold: 0.5
# eval_metric:
#   name: AdjustedRandIndex
#   threshold: 0.5
lr_scheduler:
  name: ReduceLROnPlateau
  # make sure to use the 'min' mode cause lower AdaptedRandError is better
  mode: max
  factor: 0.5
  patience: 30
trainer:
  # model with lower eval score is considered better
  eval_score_higher_is_better: true
  # path to the checkpoint directory
  checkpoint_dir: /home/*****/project/toposeg/experiments/3d_imagecas/UNET
  # path to latest checkpoint; if provided the training will be resumed from that checkpoint
  resume: null
  # path to the best_checkpoint.pytorch; to be used for fine-tuning the model with additional ground truth
  pre_trained: null
  # how many iterations between validations
  validate_after_iters: 300
  write_result_after_epochs: 10
  # skip_train_validation: true
  # how many iterations between tensorboard logging
  log_after_iters: 30
  # max number of epochs
  max_num_epochs: 500
  # max number of iterations
  max_num_iterations: 150000



# Configure training and validation loaders
loaders:
  dataset: StandardNIIDataset
  # how many subprocesses to use for data loading
  num_workers: 8
  # path to the raw data within the H5
  raw_dir: data
  # path to the the label data withtin the H5
  label_dir: label
  # configuration of the train loader
  # skeleton_dir: skeleton
  truncation: [-400, 400]
  train:
    # path to the training datasets
    file_paths:
      - /media/*****/DATA/datasets/ASOCA/nii/cropped_middle_zoomed/fold2
      - /media/*****/DATA/datasets/ASOCA/nii/cropped_middle_zoomed/fold3
      - /media/*****/DATA/datasets/ASOCA/nii/cropped_middle_zoomed/fold4
      - /media/*****/DATA/datasets/ASOCA/nii/cropped_middle_zoomed/fold5    # SliceBuilder configuration, i.e. how to iterate over the input volume patch-by-patch
    slice_builder:
      name: FilterSliceBuilder
      # train patch size given to the network (adapt to fit in your GPU mem, generally the bigger patch the better)
      patch_shape: [96, 160, 160]
      # stride between patches
      stride_shape: [48, 96, 96]
      # minimum volume of the labels in the patch
      threshold: 0.0
      # probability of accepting patches which do not fulfil the threshold criterion
      slack_acceptance: 0.01
    
    transformer:
      raw:
        - name: Standardize
        # - name: RandomFlip
        # - name: RandomRotate90
        # - name: RandomRotate
        #   # rotate only in ZY plane due to anisotropy
        #   axes: [[2, 1]]
        #   angle_spectrum: 45
        #   mode: reflect
        # - name: ElasticDeformation
        #   spline_order: 3
        # - name: GaussianBlur3D
        #   execution_probability: 0.5
        # - name: AdditiveGaussianNoise
        #   execution_probability: 0.2
        # - name: AdditivePoissonNoise
        #   execution_probability: 0.2
        - name: ToTensor
          expand_dims: true
      label:
        # - name: RandomFlip
        # - name: RandomRotate90
        # - name: RandomRotate
        #   # rotate only in ZY plane due to anisotropy
        #   axes: [[2, 1]]
        #   angle_spectrum: 45
        #   mode: reflect
        # - name: ElasticDeformation
        #   spline_order: 0
        - name: BlobsToMask
          append_label: false
          boundary: false
        - name: ToTensor
          expand_dims: false

  # configuration of the val loader
  val:
    # path to the val datasets
    file_paths:
      - /media/*****/DATA/datasets/ASOCA/nii/cropped_middle_zoomed/fold1

    # SliceBuilder configuration, i.e. how to iterate over the input volume patch-by-patch
    slice_builder:
      name: FilterSliceBuilder
      # val patch size given to the network (adapt to fit in your GPU mem, generally the bigger patch the better)
      patch_shape: [96, 160, 160]
      # val stride between patches
      stride_shape: [48, 96, 96]
      # minimum volume of the labels in the patch
      threshold: 0
      # probability of accepting patches which do not fulfil the threshold criterion
      slack_acceptance: 0.01

    # data augmentation
    transformer:
      raw:
        - name: Standardize
        - name: ToTensor
          expand_dims: true
      label:
        - name: BlobsToMask
          append_label: false
          boundary: false
        - name: ToTensor
          expand_dims: false